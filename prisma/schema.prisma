generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(uuid())
  email    String     @unique
  password String
  role     UserRole
  status   UserStatus @default(ACTIVE)

  userProfile Profile?
}

model Profile {
  id                 String   @id @default(uuid())
  name               String
  email              String   @unique
  profilePhoto       String?
  contactNumber      String?
  needPasswordChange Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  user User @relation(fields: [email], references: [email])
  // book Book[]
}

// model Book {
//   id            String     @id @default(uuid())
//   authorEmail   String
//   title         String
//   description   String
//   price         Float
//   bookLength    Int
//   edition       Int
//   publication   String
//   isbn          String
//   stock         Int        @default(0)
//   status        BookStatus @default(UNAVAILABLE)
//   adminApproval Boolean    @default(false)
//   createdAt     DateTime   @default(now())
//   updatedAt     DateTime   @updatedAt

//   author Profile  @relation(fields: [authorEmail], references: [email])
//   rating Rating[]
//   review Review[]

//   @@map("books")
// }

// model Rating {
//   id        String   @id @default(uuid())
//   bookId    String
//   rating    Float
//   userEmail String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   book Book @relation(fields: [bookId], references: [id])

//   @@map("ratings")
// }

// model Review {
//   id        String   @id @default(uuid())
//   bookId    String
//   comment   String
//   userEmail String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   book Book @relation(fields: [bookId], references: [id])

//   @@map("review")
// }

enum UserRole {
  ADMIN
  AUTHOR
  USER
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}

// enum BookStatus {
//   AVAILABLE
//   UNAVAILABLE
//   STOCK_OUT
//   BLACK_LISTED
// }
